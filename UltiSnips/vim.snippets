snippet header "Header comment"
" File: ${1:`!v expand('%:p:h:t').'/'.expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Change: `!v strftime("%b %d, %Y")`}
endsnippet

snippet save_cpo
let s:save_cpo = &cpo
set cpo&vim

${1}

let &cpo = s:save_cpo
unlet s:save_cpo
endsnippet

snippet skeleton_syntax "Skeleton Syntax file" b
" Vim syntax file
" Language:    ${1:`!v substitute(expand('%:t:r'), '.*', '\u\0', '')`}
" Maintainer:  ${2:`!v g:snips_author`}
${3:" Last Change: `!v strftime("%b %d, %Y")`}

if version < 600
	syntax clear
elseif exists('b:current_syntax')
	finish
endif

" Settings {{{1
${5}

" Syntax definitions {{{1


" Default highlighting {{{1


" }}}1

syn sync minlines=200
syn sync maxlines=500

let b:current_syntax = '${4:`!p snip.rv = snip.basename or 'filetype'`}'

" vim: set et sw=4 ts=4:
endsnippet

snippet skeleton_ftplugin "Skeleton ftplugin file" b
" File: ${1:`!v expand('%:p:h:t').'/'.expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3:FileType Plugin for ${4:`!p snip.rv = snip.basename.title() or 'filetype'`}}
${5:" Last Change: `!v strftime("%b %d, %Y")`}

if exists('b:did_ftplugin')
	finish
endif
let b:did_ftplugin = 1

let s:save_cpo = &cpo
set cpo&vim

" ${6:Settings} {{{1

$7

" Cleanup {{{1

let b:undo_ftplugin = "
			\ $0
			\"

" }}}


let &cpo = s:save_cpo
unlet s:save_cpo

" `!p snip.rv = "vim"`: set et sw=4 ts=4:
endsnippet

snippet neobundle_conf "NeoBundle bundle configuration" b
if neobundle#tap('${1}') "{{{${2/.+/
	/}${2:code}${3/.+/
	function! neobundle#hooks.on_source(bundle)
		/}${3:code}${3/.+/
	endfunction/}
endif "}}}
endsnippet
