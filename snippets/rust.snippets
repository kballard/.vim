snippet copyright
	// Copyright `strftime("%Y")` The Rust Project Developers. See the COPYRIGHT
	// file at the top-level directory of this distribution and at
	// http://rust-lang.org/COPYRIGHT.
	//
	// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
	// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
	// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
	// option. This file may not be copied, modified, or distributed
	// except according to those terms.
	
snippet feat
	#![feature(${1})]${2}
snippet macro_rules
	macro_rules! ${1:name}{
		(${2}) => {${3}}${4}
	}${5}
snippet deprecate
	#[allow(missing_doc)]
	#[deprecated = "replaced by .${1:}()"]
	#[inline]
	fn ${2}(${3}) -> ${4} {
		self.$1(${5})
	}${6}
snippet main
	fn main() {
		${1}
	}
snippet fn
	fn ${1:name}(${2}) ${3:-> ${4:()}} {
		${5}
	}

# this snippet reproduces the template that the IRC bot rusti uses
snippet rusti
	#![feature(asm, globs, macro_rules, phase, simd, struct_variant, quad_precision_float)]
	
	extern crate collections;
	extern crate native;
	extern crate rand;
	#[phase(syntax)]
	extern crate regex_macros;
	extern crate regex;

	#[allow(dead_code)]
	static version: &'static str = "`system("rustc --version | head -1")`";

	#[allow(dead_code)]
	fn show<T: std::fmt::Show>(e: T) { println!("{}", e) }

	fn main() {
		let r = {
			${1}
		};
		println!("{}", r)
	}
