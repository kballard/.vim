# Shougo plugins

[[plugins]]
repository = 'Shougo/neomru.vim'
filetypes = 'all'

[[plugins]]
repository = 'Shougo/unite.vim'
depends = 'Shougo/neomru.vim'

  [plugins.commands]
  name = 'Unite'
  complete = 'customlist,unite#complete_source'

[[plugins]]
repository = 'Shougo/vimfiler.vim'
depends = 'Shougo/unite.vim'
mappings = '<Plug>'
explorer = 1

  [plugins.commands]
  name = ['VimFiler', 'VimFilerExplorer', 'Edit', 'Read', 'Source', 'Write']
  complete = 'customlist,vimfiler#complete'

[[plugins]]
repository = 'Shougo/vimshell.vim'
mappings = '<Plug>'

  [plugins.commands]
  name = 'VimShell'
  complete = 'customlist,vimshell#complete'

[[plugins]]
repository = 'Shougo/neocomplete.vim'
depends = 'Shougo/context_filetype.vim'
insert = 1

[[plugins]]
repository = 'Shougo/neosnippet.vim'
depends = ['Shougo/neosnippet-snippets', 'Shougo/context_filetype.vim']
insert = 1
filetypes = ['neosnippet']
unite_sources = ['neosnippet', 'neosnippet/user', 'neosnippet/runtime']

# Unite sources

[[plugins]]
repository = 'Shougo/unite-outline'

[[plugins]]
repository = 'tsukkee/unite-tag'

[[plugins]]
repository = 'tsukkee/unite-help'

# SCM plugins

[[plugins]]
repository = 'tpope/vim-fugitive'
lazy = 0

[[plugins]]
repository = 'gregsexton/gitv'
depends = 'tpope/vim-fugitive'
lazy = 0

[[plugins]]
repository = 'mhinz/vim-signify'
filetypes = 'all'

[[plugins]]
repository = 'vim-scripts/ConflictDetection'
filetypes = 'all'

[[plugins]]
repository = 'vim-scripts/ConflictMotions'
depends = 'vim-scripts/CountJump'
lazy = 0

# Filetypes

[[plugins]]
repository = 'kballard/vim-fish'
filetypes = ['fish', 'fishprofile']

[[plugins]]
repository = 'rust-lang/rust.vim'
filetypes = 'rust'

[[plugins]]
repository = 'kballard/vim-swift-extra'
filetypes = 'swift'
unite_sources = ['swift/device', 'swift/developer_dir']

[[plugins]]
repository = 'kballard/vim-markdown'
rev = 'inline_and_code_fixes'
filetypes = 'markdown'

[[plugins]]
repository = 'mustache/vim-mustache-handlebars'
filetypes = ['mustache', 'handlebars']

[[plugins]]
repository = 'elixir-lang/vim-elixir'
filetypes = ['elixir', 'eelixir']

# Colorschemes

[[plugins]]
repository = 'chriskempson/base16-vim'

# Text Objects

[[plugins]]
repository = 'kana/vim-textobj-user'
function_prefix = 'textobj'

[[plugins]]
repository = 'kana/vim-textobj-line'
mappings = [['xo', 'al', 'il']]

[[plugins]]
repository = 'saaguero/vim-textobj-pastedtext'
mappings = [['xo', 'gb']]

[[plugins]]
repository = 'kana/vim-textobj-indent'
mappings = [['xo', 'ai', 'ii', 'aI', 'iI']]

# Miscellaneous

[[plugins]]
repository = 'bling/vim-airline'
lazy = false

[[plugins]]
repository = 'vim-scripts/AfterColors.vim'
lazy = false

#[[plugins]]
#repository = 'bkad/CamelCaseMotion'
#mappings = '<Plug>CamelCaseMotion_'

[[plugins]]
repository = 'vim-scripts/CountJump'

[[plugins]]
repository = 'scrooloose/nerdcommenter'
filetypes = 'all'

[[plugins]]
repository = 'mileszs/ack.vim'

  [[plugins.commands]]
  name = ['Ack', 'AckAdd', 'AckFromSearch', 'LAck', 'LAckAdd', 'AckFile']
  complete = 'file'

  [[plugins.commands]]
  name = ['AckHelp', 'LAckHelp', 'AckWindow', 'LAckWindow']
  complete = 'help'

[[plugins]]
repository = 'editorconfig/editorconfig-vim'
filetypes = 'all'

[[plugins]]
repository = 'tpope/vim-speeddating'
filetypes = 'all'

[[plugins]]
repository = 'mattn/webapi-vim'

[[plugins]]
repository = 'mattn/gist-vim'
depends = 'mattn/webapi-vim'
commands = ['Gist']

[[plugins]]
repository = 'mtth/scratch.vim'
commands = ['Scratch', 'ScratchInsert', 'ScratchSelection']
mappings = ['gs', 'gS']

[[plugins]]
repository = 'tpope/vim-sleuth'
filetypes = 'all'

[[plugins]]
repository = 'terryma/vim-expand-region'
mappings = ['+', '_']

[[plugins]]
repository = 'tmux-plugins/vim-tmux-focus-events'
lazy = false
